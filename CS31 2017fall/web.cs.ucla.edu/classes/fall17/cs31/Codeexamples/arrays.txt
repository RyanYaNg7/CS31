void doDateStuff()
{
    const int NMONTHS = 12; 

    const int daysInMonth[NMONTHS] = {
        31, 28, 31, 30, 31, 30,
        31, 31, 30, 31, 30, 31
    };

    const string monthName[NMONTHS] = {
        "January", "February", "March",  ...
    };

    ...
    cout << "These months have 31 days:" << endl;
    for (int k = 0; k < NMONTHS; k++)
    {
        if (daysInMonth[k] == 31)
            cout << monthName[k] << endl;
    }
}

=======================================================

int main()
{
    const int MAX_NUMBER_OF_SCORES = 10000;
    int scores[MAX_NUMBER_OF_SCORES];
    int nScores = 0;
    int total = 0;
    cout << "Enter the scores (negative to quit):" << endl;
    for (;;)
    {
        int s;
        cin >> s;
        if (s < 0)
            break;
        if (nScores == MAX_NUMBER_OF_SCORES)
        {
            cout << "I can handle only " << MAX_NUMBER_OF_SCORES
                 << " scores!" << endl;
            cout << "Continuing with just the first "
                  << MAX_NUMBER_OF_SCORES << " values." << endl;
            break;
        }
        total += s;
        scores[nScores] = s;
        nScores++;
    }
    if (nScores == 0)
        cout << "There were no scores, so no stats" << endl;
    else
    {
        double mean = static_cast<double>(total) / nScores;
        cout << "The mean is " << mean << endl;
        double sumOfSquares = 0;
        for (int k = 0; k < nScores; k++)
        {
            double diff = scores[k] - mean;
            sumOfSquares += diff * diff;
        }
        cout << "The std. deviation is "
              << sqrt(sumOfSquares / nScores) << endl;
    }
}
    
===========================================================

double computeMean(const int a[], int n);
void setAll(int a[], int n, int value);

int main()
{
    ...
    const int MAX_NUMBER_OF_SCORES = 1000;
    int scores[MAX_NUMBER_OF_SCORES];
    int nScores = 0;
    ... // fill up the array (perhaps partially)
    double m = computeMean(scores, nScores);

    int stuff[100];
    ... // fill up the entire stuff array
    double m2 = computeMean(stuff, 100);
    ...
    setAll(stuff, 10, 42);
}

double computeMean(const int a[], int n)
{
    if (n <= 0)
        return 0;
    int total = 0;
    for (int k = 0; k < n; k++)
        total += a[k];
    return static_cast<double>(total) / n;
}

void setAll(int a[], int n, int value)
{
    for (int k = 0; k < n; k++)
        a[k] = value;
}
